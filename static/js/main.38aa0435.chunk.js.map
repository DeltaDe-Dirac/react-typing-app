{"version":3,"sources":["components/AuthForm/AuthForm.js","components/AuthModal/AuthModal.js","pages/LandingPage/LandingPage.js","pages/PageNotFound/PageNotFound.js","pages/PortalPage/PortalPage.js","utils/firebase.js","pages/LoginPage/LoginPage.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","isLogin","useState","validated","setValidated","useEffect","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","className","Row","Group","as","Col","md","controlId","Control","required","type","placeholder","maxLength","Feedback","Button","variant","Alert","AuthModal","show","setHide","setIsLogin","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","to","onClick","Body","Footer","alert","LandingPage","cursorColor","toggleCursorColor","text","word","index","headerText","setHeaderText","showAuth","setShowAuth","blinkingCursor","setTimeout","clearTimeout","typeWord","length","newHeaderText","concat","Math","floor","random","Container","fluid","PageNotFound","redirectTo","setRedirectTo","Nav","Link","eventKey","onSelect","selectedKey","PortalPage","FirebaseContext","createContext","children","app","apps","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","Provider","value","LoginPage","useContext","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38aa0435.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./AuthForm.css\";\r\nimport { Form, Col, Button, Alert } from \"react-bootstrap\";\r\n\r\nexport default function LoginForm({ isLogin }) {\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    setValidated(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setValidated(false);\r\n    };\r\n  }, [isLogin]);\r\n\r\n  return (\r\n    <Form noValidate validated={validated} onSubmit={handleSubmit} className=\"c-loginForm\">\r\n      {!isLogin ? (\r\n        <>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"8\" controlId=\"validationCustom01\">\r\n              <Form.Control required type=\"text\" placeholder=\"First Name\" maxLength={25} />\r\n              <Form.Control.Feedback type=\"invalid\">Required Field</Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"8\" controlId=\"validationCustom02\">\r\n              <Form.Control required type=\"text\" placeholder=\"Last Name\" maxLength={25} />\r\n              <Form.Control.Feedback type=\"invalid\">Required Field</Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form.Row>\r\n        </>\r\n      ) : null}\r\n      <Form.Row>\r\n        <Form.Group as={Col} md=\"8\" controlId=\"validationCustom03\">\r\n          <Form.Control required type=\"text\" placeholder=\"Username or Email\" maxLength={25} />\r\n          <Form.Control.Feedback type=\"invalid\">Required Field</Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Form.Row className=\"submitForm\">\r\n        <Form.Group as={Col} md=\"8\" controlId=\"validationCustom04\">\r\n          <Form.Control required type=\"password\" placeholder=\"Password\" />\r\n          <Form.Control.Feedback type=\"invalid\">Required Field</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"outline-success\">\r\n          {isLogin ? \"Sign In\" : \"Sing Up\"}\r\n        </Button>\r\n      </Form.Row>\r\n      <Alert variant=\"danger\">\r\n        <p className=\"mb-0\">authentication error messages</p>\r\n      </Alert>\r\n    </Form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./AuthModal.css\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport AuthForm from \"../AuthForm/AuthForm\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function AuthModal({ show, setHide }) {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={setHide} backdrop=\"static\" keyboard={false} className=\"c-authModal\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {isLogin ? \"Log In or \" : \"Sign Up or \"}\r\n            <Link to=\"#\" onClick={() => setIsLogin(!isLogin)}>\r\n              {isLogin ? \"Sign Up\" : \"Log In\"}\r\n            </Link>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <AuthForm isLogin={isLogin} />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Link to=\"#\" onClick={() => alert(\"Sign in with Google\")}>\r\n            Sign in with Google\r\n          </Link>\r\n          <Button variant=\"secondary\" onClick={setHide}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./LandingPage.css\";\r\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthModal from \"../../components/AuthModal/AuthModal\";\r\n\r\nexport default function LandingPage() {\r\n  const [cursorColor, toggleCursorColor] = useState(true);\r\n  const [headerText, setHeaderText] = useState({ text: \"Touch Typing\", word: \" Practice.\", index: 0 });\r\n  const [showAuth, setShowAuth] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const blinkingCursor = setTimeout(function () {\r\n      toggleCursorColor(!cursorColor);\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearTimeout(blinkingCursor);\r\n    };\r\n  }, [cursorColor]);\r\n\r\n  useEffect(() => {\r\n    let typeWord = null;\r\n\r\n    if (headerText.index < headerText.word.length) {\r\n      typeWord = setTimeout(function () {\r\n        const newHeaderText = {\r\n          text: headerText.text.concat(headerText.word[headerText.index]),\r\n          word: headerText.word,\r\n          index: headerText.index + 1,\r\n        };\r\n        setHeaderText(newHeaderText);\r\n      }, Math.floor(Math.random() * 400) + 100);\r\n    }\r\n\r\n    return () => {\r\n      if (typeWord !== null) {\r\n        clearTimeout(typeWord);\r\n      }\r\n    };\r\n  }, [headerText]);\r\n\r\n  return (\r\n    <div className=\"p-landWrap\">\r\n      <Container fluid>\r\n        <div className=\"p-landing\">\r\n          <h1>TypeMe</h1>\r\n          <Button variant=\"outline-success\" onClick={() => setShowAuth(true)}>\r\n            Login\r\n          </Button>\r\n        </div>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\">\r\n            <div className=\"p-landGetStarted\">\r\n              <h1>\r\n                {headerText.text}\r\n                <span className={cursorColor ? \"strong\" : \"weak\"}>_</span>\r\n              </h1>\r\n              <Link to=\"/portal\" className=\"btn btn-outline-success\">\r\n                Get Started\r\n              </Link>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <AuthModal show={showAuth} setHide={() => setShowAuth(false)} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Nav } from \"react-bootstrap/\";\r\n\r\nimport \"./PageNotFound.css\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport default function PageNotFound() {\r\n  const [redirectTo, setRedirectTo] = useState(null);\r\n\r\n  if (redirectTo !== null) {\r\n    return <Redirect to={redirectTo}></Redirect>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"pagenotfound-img\">\r\n      <Container>\r\n        <h1>404</h1>\r\n        <div className=\"notfound\">\r\n          <p className=\"text-uppercase\">page not found</p>\r\n          <Nav.Link eventKey=\"/\" onSelect={(selectedKey) => setRedirectTo(selectedKey)}>\r\n            Home\r\n          </Nav.Link>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"./PortalPage.css\";\r\n\r\nexport default function PortalPage() {\r\n  return (\r\n    <Container>\r\n      <h1>Hello PortalPage</h1>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { createContext } from \"react\";\r\nimport app from \"firebase/app\";\r\n\r\nconst FirebaseContext = createContext(null);\r\nexport { FirebaseContext };\r\n\r\nexport default ({ children }) => {\r\n  if (!app.apps.length) {\r\n    app.initializeApp({\r\n      apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n      authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n      projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n      storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n      messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n      appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n      measurementId: process.env.REACT_APP_FIREBASE_MEASURMENT_ID,\r\n      databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    });\r\n  }\r\n  return <FirebaseContext.Provider value={app}>{children}</FirebaseContext.Provider>;\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { FirebaseContext } from \"../../utils/firebase\";\r\nimport \"firebase/analytics\";\r\nimport \"firebase/auth\";\r\n\r\nexport default function LoginPage() {\r\n  const firebase = useContext(FirebaseContext);\r\n\r\n  //   firebase\r\n  //     .auth()\r\n  //     .createUserWithEmailAndPassword(\"some-username@email.com\", \"password\")\r\n  //     .then((userCredential) => {\r\n  //       console.log(userCredential.user);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(error.code, \"|\", error.message);\r\n  //     });\r\n\r\n  //   firebase\r\n  //     .auth()\r\n  //     .signInAnonymously()\r\n  //     .then(() => {\r\n  //       firebase.auth().onAuthStateChanged((user) => {\r\n  //         if (user) {\r\n  //           console.log(user);\r\n  //         } else {\r\n  //           console.log(\"signed out\");\r\n  //         }\r\n  //       });\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(error.code, \"|\", error.message);\r\n  //     });\r\n\r\n  return <div>Hello LoginPage</div>;\r\n}\r\n","import \"./App.css\";\nimport LandingPage from \"./pages/LandingPage/LandingPage\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport PageNotFound from \"./pages/PageNotFound/PageNotFound\";\nimport PortalPage from \"./pages/PortalPage/PortalPage\";\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\n\nfunction App() {\n  return (\n    <>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <LandingPage />\n          </Route>\n          <Route exact path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route exact path=\"/portal\">\n            <PortalPage />\n          </Route>\n          <Route path=\"/\">\n            <PageNotFound />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport FirebaseProvider from \"./utils/firebase\";\n\nReactDOM.render(\n  <FirebaseProvider>\n    <App />\n  </FirebaseProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}